{
   "openapi": "3.0.1",
   "info": {
      "title": "Inventory Management System API",
      "description": "API documentation for managing inventory, suppliers, products, and orders",
      "contact": {
         "name": "Suman Bisunkhe",
         "url": "https://sumanbisunkhe.github.io/website/",
         "email": "sumanbisunkhe304@gmail.com"
      },
      "license": {
         "name": "Apache 2.0",
         "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0.0"
   },
   "servers": [
      {
         "url": "http://localhost:8080",
         "description": "Generated server url"
      }
   ],
   "security": [
      {
         "bearerAuth": []
      }
   ],
   "paths": {
      "/api/users/update/{userId}": {
         "put": {
            "tags": [
               "user-controller"
            ],
            "summary": "Update user details",
            "description": "Updates the details of an existing user.",
            "operationId": "updateUser",
            "parameters": [
               {
                  "name": "userId",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UserDto"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "User updated successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Validation errors in user data",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "User not found with the provided ID",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/products/update/{productId}": {
         "put": {
            "tags": [
               "product-controller"
            ],
            "summary": "Update a product",
            "description": "Updates an existing product using its ID and the provided updated details.",
            "operationId": "updateProduct",
            "parameters": [
               {
                  "name": "productId",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/ProductDto"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "Product updated successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Validation errors occurred",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Product not found",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/orders/{id}": {
         "get": {
            "tags": [
               "order-controller"
            ],
            "summary": "Get an order by ID",
            "description": "Retrieves an order by its unique ID.",
            "operationId": "getOrderById",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Order found",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Order not found",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         },
         "put": {
            "tags": [
               "order-controller"
            ],
            "summary": "Update an existing order",
            "description": "Updates the order details for the specified order ID.",
            "operationId": "updateOrder",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/OrderDto"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "Order updated successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Validation errors",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Order not found",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         },
         "delete": {
            "tags": [
               "order-controller"
            ],
            "summary": "Delete an order",
            "description": "Deletes an order with the specified ID.",
            "operationId": "deleteOrder",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Order deleted successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Order not found",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/users/register": {
         "post": {
            "tags": [
               "user-controller"
            ],
            "summary": "Register a new user",
            "description": "Registers a new user with the provided details.",
            "operationId": "registerUser",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UserDto"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "User registered successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Validation errors in user data",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/users/deactivate/{userId}": {
         "post": {
            "tags": [
               "user-controller"
            ],
            "summary": "Deactivate user",
            "description": "Deactivates a user by their ID.",
            "operationId": "deactivateUser",
            "parameters": [
               {
                  "name": "userId",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "User deactivated successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "User not found with the provided ID",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/users/activate/{userId}": {
         "post": {
            "tags": [
               "user-controller"
            ],
            "summary": "Activate user",
            "description": "Activates a user by their ID.",
            "operationId": "activateUser",
            "parameters": [
               {
                  "name": "userId",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "User activated successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "User not found with the provided ID",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/products/create": {
         "post": {
            "tags": [
               "product-controller"
            ],
            "summary": "Create a new product",
            "description": "Creates a new product in the system with the provided details.",
            "operationId": "createProduct",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/ProductDto"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Product created successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Validation errors occurred",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/orders": {
         "get": {
            "tags": [
               "order-controller"
            ],
            "summary": "Get all orders",
            "description": "Retrieves a list of all orders in the system.",
            "operationId": "getAllOrders",
            "responses": {
               "200": {
                  "description": "Orders retrieved successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/OrderDto"
                           }
                        }
                     }
                  }
               }
            }
         },
         "post": {
            "tags": [
               "order-controller"
            ],
            "summary": "Create a new order",
            "description": "Creates a new order from the provided order details.",
            "operationId": "createOrder",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/OrderDto"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Order created successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Validation errors",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/csv/import/products": {
         "post": {
            "tags": [
               "CSV Operations"
            ],
            "summary": "Import Products from CSV",
            "description": "Imports products from a CSV file into the database.",
            "operationId": "importProductsFromCSV",
            "requestBody": {
               "description": "CSV file containing product data",
               "content": {
                  "multipart/form-data": {
                     "schema": {
                        "type": "string",
                        "format": "binary"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "Products imported successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ProductDto"
                        }
                     }
                  }
               },
               "500": {
                  "description": "Failed to import products"
               }
            }
         }
      },
      "/api/csv/import/orders": {
         "post": {
            "tags": [
               "CSV Operations"
            ],
            "summary": "Import Orders from CSV",
            "description": "Imports orders from a CSV file into the database.",
            "operationId": "importOrdersFromCSV",
            "requestBody": {
               "description": "CSV file containing order data",
               "content": {
                  "multipart/form-data": {
                     "schema": {
                        "type": "string",
                        "format": "binary"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "Orders imported successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/OrderDto"
                        }
                     }
                  }
               },
               "500": {
                  "description": "Failed to import orders"
               }
            }
         }
      },
      "/api/csv/export/products": {
         "post": {
            "tags": [
               "CSV Operations"
            ],
            "summary": "Export Products to CSV",
            "description": "Exports all products from the database to a CSV file at the specified file path.",
            "operationId": "exportProductsToCSV",
            "parameters": [
               {
                  "name": "filePath",
                  "in": "query",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Products exported successfully"
               },
               "500": {
                  "description": "Internal server error"
               }
            }
         }
      },
      "/api/csv/export/orders": {
         "post": {
            "tags": [
               "CSV Operations"
            ],
            "summary": "Export Orders to CSV",
            "description": "Exports all orders from the database to a CSV file at the specified file path.",
            "operationId": "exportOrdersToCSV",
            "parameters": [
               {
                  "name": "filePath",
                  "in": "query",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Orders exported successfully"
               },
               "500": {
                  "description": "Internal server error"
               }
            }
         }
      },
      "/api/auth/login": {
         "post": {
            "tags": [
               "Authentication"
            ],
            "summary": "User login",
            "description": "Authenticate a user and return a JWT token upon successful login.",
            "operationId": "login",
            "requestBody": {
               "description": "User login credentials",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/AuthenticationRequest"
                     },
                     "example": {
                        "identifier": "user@example.com",
                        "password": "password123"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "Successful authentication",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/AuthenticationResponse"
                        },
                        "example": {
                           "jwtToken": "eyJhbGciOiJIUzI1NiIsInR...",
                           "message": "Login successful"
                        }
                     }
                  }
               },
               "401": {
                  "description": "Invalid credentials",
                  "content": {
                     "application/json": {
                        "example": "Invalid credentials"
                     }
                  }
               }
            }
         }
      },
      "/api/users/{userId}": {
         "get": {
            "tags": [
               "user-controller"
            ],
            "summary": "Get user by ID",
            "description": "Fetches the details of a user by their unique ID.",
            "operationId": "getUserById",
            "parameters": [
               {
                  "name": "userId",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "User details fetched successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "User not found with the provided ID",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/users/username/{username}": {
         "get": {
            "tags": [
               "user-controller"
            ],
            "summary": "Find user by username",
            "description": "Fetches a user by their username.",
            "operationId": "findByUsername",
            "parameters": [
               {
                  "name": "username",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "User details fetched successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "User not found with the provided username",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/users/email/{email}": {
         "get": {
            "tags": [
               "user-controller"
            ],
            "summary": "Find user by email",
            "description": "Fetches a user by their email.",
            "operationId": "findByEmail",
            "parameters": [
               {
                  "name": "email",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "User details fetched successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "User not found with the provided email",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/users/all": {
         "get": {
            "tags": [
               "user-controller"
            ],
            "summary": "Get all users",
            "description": "Fetches a list of all users in the system.",
            "operationId": "getAllUsers",
            "responses": {
               "200": {
                  "description": "List of users fetched successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/UserDto"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/suppliers": {
         "get": {
            "tags": [
               "supplier-controller"
            ],
            "summary": "Get all suppliers",
            "description": "Fetches a list of all suppliers in the system.",
            "operationId": "getAllSuppliers",
            "responses": {
               "200": {
                  "description": "List of suppliers fetched successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SupplierDto"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Internal server error",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SupplierDto"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/suppliers/{id}": {
         "get": {
            "tags": [
               "supplier-controller"
            ],
            "summary": "Get supplier by ID",
            "description": "Fetches a supplier's details by their unique ID.",
            "operationId": "getSupplierById",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of the supplier to retrieve",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Supplier details fetched successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "$ref": "#/components/schemas/SupplierDto"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Supplier not found with the provided ID",
                  "content": {
                     "*/*": {
                        "schema": {
                           "$ref": "#/components/schemas/SupplierDto"
                        }
                     }
                  }
               }
            }
         },
         "delete": {
            "tags": [
               "supplier-controller"
            ],
            "summary": "Delete supplier by ID",
            "description": "Deletes an existing supplier by their unique ID.",
            "operationId": "deleteSupplier",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of the supplier to delete",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Supplier deleted successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "string"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Supplier not found with the provided ID",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "string"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/products/{productId}": {
         "get": {
            "tags": [
               "product-controller"
            ],
            "summary": "Get a product by ID",
            "description": "Retrieves a product's details by its ID.",
            "operationId": "getProductById",
            "parameters": [
               {
                  "name": "productId",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Product retrieved successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Product not found",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/products/all": {
         "get": {
            "tags": [
               "product-controller"
            ],
            "summary": "Get all products",
            "description": "Retrieves a list of all products in the system.",
            "operationId": "getAllProducts",
            "responses": {
               "200": {
                  "description": "List of products retrieved successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ProductDto"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/users/delete/{userId}": {
         "delete": {
            "tags": [
               "user-controller"
            ],
            "summary": "Delete user by ID",
            "description": "Deletes a user by their unique ID.",
            "operationId": "deleteUser",
            "parameters": [
               {
                  "name": "userId",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "User deleted successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "string"
                        }
                     }
                  }
               },
               "404": {
                  "description": "User not found with the provided ID",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "string"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/products/delete/{productId}": {
         "delete": {
            "tags": [
               "product-controller"
            ],
            "summary": "Delete a product by ID",
            "description": "Deletes an existing product using its ID.",
            "operationId": "deleteProduct",
            "parameters": [
               {
                  "name": "productId",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int64"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Product deleted successfully",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "string"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Product not found",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "string"
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "UserDto": {
            "required": [
               "dateOfBirth",
               "email",
               "fullName",
               "password",
               "roles",
               "username"
            ],
            "type": "object",
            "properties": {
               "id": {
                  "type": "integer",
                  "description": "Unique identifier for the user",
                  "format": "int64",
                  "example": 1
               },
               "username": {
                  "maxLength": 20,
                  "minLength": 3,
                  "type": "string",
                  "description": "Username for the user",
                  "example": "john_doe"
               },
               "password": {
                  "maxLength": 50,
                  "minLength": 8,
                  "type": "string",
                  "description": "Password for the user account (hashed)",
                  "example": "P@ssw0rd123"
               },
               "email": {
                  "type": "string",
                  "description": "Email address for the user",
                  "example": "john.doe@example.com"
               },
               "fullName": {
                  "maxLength": 100,
                  "minLength": 0,
                  "type": "string",
                  "description": "Full name of the user",
                  "example": "John Doe"
               },
               "roles": {
                  "uniqueItems": true,
                  "type": "array",
                  "description": "Roles assigned to the user",
                  "example": [
                     "CUSTOMER",
                     "SUPPLIER"
                  ],
                  "items": {
                     "type": "string",
                     "description": "Roles assigned to the user",
                     "example": "[\"CUSTOMER\",\"SUPPLIER\"]"
                  }
               },
               "dateOfBirth": {
                  "type": "string",
                  "description": "Date of birth of the user in dd-MM-yyyy format",
                  "format": "date",
                  "example": "0006-06-13"
               },
               "phoneNumber": {
                  "pattern": "^[+]?\\d{10,15}$",
                  "type": "string",
                  "description": "Phone number of the user",
                  "example": "+123456789"
               },
               "address": {
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string",
                  "description": "Address of the user",
                  "example": "1234 Elm Street, Springfield, IL"
               },
               "isActive": {
                  "type": "boolean",
                  "description": "Indicates if the user's account is active",
                  "example": true
               }
            }
         },
         "ProductDto": {
            "required": [
               "name",
               "price",
               "stockQuantity",
               "supplierId"
            ],
            "type": "object",
            "properties": {
               "id": {
                  "type": "integer",
                  "description": "Unique identifier for the product",
                  "format": "int64",
                  "example": 1
               },
               "name": {
                  "maxLength": 100,
                  "minLength": 0,
                  "type": "string",
                  "description": "Name of the product",
                  "example": "Laptop"
               },
               "description": {
                  "maxLength": 500,
                  "minLength": 0,
                  "type": "string",
                  "description": "Description of the product",
                  "example": "15-inch laptop with 8GB RAM and 256GB SSD"
               },
               "price": {
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "type": "number",
                  "description": "Price of the product",
                  "example": 999.99
               },
               "stockQuantity": {
                  "minimum": 0,
                  "type": "integer",
                  "description": "Quantity of the product in stock",
                  "format": "int32",
                  "example": 50
               },
               "supplierId": {
                  "type": "integer",
                  "description": "Unique identifier of the supplier associated with this product",
                  "format": "int64",
                  "example": 1
               }
            }
         },
         "OrderDto": {
            "required": [
               "orderDate",
               "productIds",
               "totalAmount",
               "userId"
            ],
            "type": "object",
            "properties": {
               "id": {
                  "type": "integer",
                  "description": "Unique identifier for the order",
                  "format": "int64",
                  "example": 1
               },
               "orderDate": {
                  "type": "string",
                  "description": "Date and time when the order was placed",
                  "format": "date-time"
               },
               "totalAmount": {
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "type": "number",
                  "description": "Total amount for the order",
                  "example": 1999.99
               },
               "productIds": {
                  "type": "array",
                  "description": "List of product IDs included in the order",
                  "example": [
                     1,
                     2,
                     3
                  ],
                  "items": {
                     "type": "integer",
                     "description": "List of product IDs included in the order",
                     "format": "int64"
                  }
               },
               "userId": {
                  "type": "integer",
                  "description": "Unique identifier of the user who placed the order",
                  "format": "int64",
                  "example": 123
               }
            }
         },
         "AuthenticationRequest": {
            "required": [
               "identifier",
               "password"
            ],
            "type": "object",
            "properties": {
               "identifier": {
                  "type": "string",
                  "description": "User identifier which can be either username, email, or phone number",
                  "example": "johndoe@example.com"
               },
               "password": {
                  "type": "string",
                  "description": "User's password for authentication",
                  "example": "SecureP@ssw0rd"
               }
            }
         },
         "AuthenticationResponse": {
            "type": "object",
            "properties": {
               "jwt": {
                  "type": "string",
                  "description": "JWT token generated after successful authentication",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
               },
               "message": {
                  "type": "string",
                  "description": "Message indicating the result of the authentication process",
                  "example": "Authentication successful"
               }
            }
         },
         "SupplierDto": {
            "required": [
               "address",
               "contactNumber",
               "name"
            ],
            "type": "object",
            "properties": {
               "id": {
                  "type": "integer",
                  "description": "Unique identifier for the supplier",
                  "format": "int64",
                  "example": 1
               },
               "name": {
                  "maxLength": 100,
                  "minLength": 2,
                  "type": "string",
                  "description": "Name of the supplier",
                  "example": "Acme Corp"
               },
               "contactNumber": {
                  "pattern": "^\\+?[0-9]{7,15}$",
                  "type": "string",
                  "description": "Contact number of the supplier",
                  "example": "+1234567890"
               },
               "address": {
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string",
                  "description": "Physical address of the supplier",
                  "example": "456 Industrial Rd, Springfield, IL"
               }
            }
         }
      },
      "securitySchemes": {
         "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
         }
      }
   }
}